{"version":3,"sources":["pages/NotFound.jsx","components/CharacterItem.jsx","utils/api.js","components/CharacterDetails.jsx","pages/Home.jsx","pages/Episode.jsx","pages/Location.jsx","layouts/Footer.jsx","layouts/Main.jsx","routes/App.jsx","store/reducers/index.js","fields/initialState.js","index.jsx"],"names":["NotFound","ProductItem","props","status","character","className","src","image","alt","onClick","handlerName","id","name","to","location","episode","client","ApolloClient","uri","cache","InMemoryCache","getCharacters","a","page","Number","query","gql","variables","data","getCharacter","getEpisode","episodeId","getLocation","locationId","CharacterDetails","state","loading","error","show","fetchData","setState","api","charactersByIds","handleClose","classStatus","this","Modal","onHide","size","Header","closeButton","Title","Body","css","color","species","moment","created","format","gender","origin","type","dimension","map","key","Footer","Button","variant","Component","override","Home","characters","charactersCurrent","pages","count","characterId","characterName","isActivePopup","value","info","results","handleChange","event","handlePopup","handlePopupClose","item","Pagination","onChange","Episode","match","params","console","log","episodesByIds","air_date","Location","locationsByIds","residents","Layout","children","connect","user","Main","exact","path","component","reducer","action","charactersA","charactersCar","i","e","indexOf","payload","price","total","charactersR","j","filter","items","initialState","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84759b54.chunk.js","sourcesContent":["import React from 'react';\n\nfunction NotFound() {\n  return <h1>404: Not Found</h1>;\n}\n\nexport default NotFound;","import React from 'react';\nimport '../assets/styles/CharacterItem.css';\nimport { Link } from 'react-router-dom';\n\nconst ProductItem = (props) => {\n\tconst { character } = props;\n\n\tconst classStatus = (status) => {\n\t\tif (status === 'Alive') {\n\t\t\treturn 'mx-3 text-success';\n\t\t} else if (status === 'Dead') {\n\t\t\treturn 'mx-3 text-danger';\n\t\t} else {\n\t\t\treturn 'mx-3 text-capitalize d-inline-block';//text-uppercase \n\t\t}\n\t};\n\treturn (\n\t\t<>\n\t\t\t<div className=\"character-card-container\">\n\t\t\t\t<div className=\"character-card-container-images\">\n\t\t\t\t\t<img src={character.image} alt=\"Cowboy Rick\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"character-card-container-description\">\n\t\t\t\t\t<div className=\"section\">\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName=\"button-tag\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tprops.handlerName(character.id, character.name);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{character.name}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className={classStatus(character.status)}>\n\t\t\t\t\t\t\t{character.status}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"section\">\n\t\t\t\t\t\t<span className=\"text-gray\">Last known location:</span>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tto={`/locations/${character.location.id}`}\n\t\t\t\t\t\t\tclassName=\"mx-3\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{character.location.name}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"section\">\n\t\t\t\t\t\t<span className=\"text-gray\">First seen in:</span>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tclassName=\"mx-3\"\n\t\t\t\t\t\t\tto={`/episodes/${character.episode[0].id}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{character.episode[0].name}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default ProductItem;\n","import { ApolloClient, InMemoryCache, gql } from '@apollo/client';\n\nconst client = new ApolloClient({\n    uri: 'https://rickandmortyapi.com/graphql',\n    cache: new InMemoryCache()\n});\n\nconst getCharacters = async(page = Number) => {\n    try {\n        const { data } = await client.query({\n            query: gql `\n            query getCharactersByPage($page: Int) {\n              characters(page: $page) {\n                  info {\n                      pages\n                  }\n                  results {\n                      id, name, image, status, species, \n                      episode{\n                        id, name\n                      },location{\n                        id, name\n                      }                  }\n              }\n            }`,\n            variables: { page },\n        });\n        return data\n    } catch (error) {\n        throw (error)\n    }\n}\n\nconst getCharacter = async(id = Number) => {\n    try {\n        const { data } = await client.query({\n            query: gql `query{\n                charactersByIds(ids:${id}){\n                  id,\n                  name,\n                  status,\n                  species,\n                  type,\n                  gender,\n                  origin{\n                    id,\n                    name,\n                    dimension,\n                    type\n                  },\n                  location{\n                    id,\n                    name,\n                    dimension,\n                    type\n                  },\n                  image,\n                  episode{\n                    id,\n                    name\n                  },\n                  created\n                }\n              }`,\n            variables: {},\n        });\n        return data\n    } catch (error) {\n        throw (error)\n    }\n}\n\n\nconst getEpisode = async(episodeId) => {\n    try {\n        const { data } = await client.query({\n            query: gql `query{\n              episodesByIds(ids:${episodeId}){\n                id,\n                name,\n                air_date,\n                episode,\n                characters{\n                  name,\n                  image\n                },\n                created\n              }\n            }`,\n            variables: {},\n        });\n        return data\n    } catch (error) {\n        throw (error)\n    }\n}\nconst getLocation = async(locationId) => {\n    try {\n        const { data } = await client.query({\n            query: gql `query{\n              locationsByIds(ids:${locationId}){\n                id,\n                name,\n                type,\n                dimension,\n                residents{\n                  name,\n                  image\n                },\n                created\n              }    \n            }`,\n            variables: {},\n        });\n        return data\n    } catch (error) {\n        throw (error)\n    }\n}\n\nexport default { getCharacters, getCharacter, getEpisode, getLocation };","import React, { Component } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport BeatLoader from 'react-spinners/BeatLoader';\r\nimport api from '../utils/api';\r\nimport { css } from '@emotion/core';\r\nimport '../assets/styles/CharacterDetails.css';\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass CharacterDetails extends Component {\r\n\tstate = {\r\n\t\tloading: true,\r\n\t\terror: false,\r\n\t\tcharacter: {},\r\n\t\tshow: true,\r\n\t};\r\n\r\n\tfetchData = async () => {\r\n\t\tthis.setState({ loading: true, error: false });\r\n\t\ttry {\r\n\t\t\tlet data = await api.getCharacter(this.props.id);\r\n\t\t\tthis.setState({\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: false,\r\n\t\t\t\tcharacter: data.charactersByIds[0],\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tthis.setState({ loading: false, error: error });\r\n\t\t}\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.fetchData();\r\n\t}\r\n\thandleClose = () => {\r\n\t\tthis.setState({ show: false });\r\n\t\tthis.props.handleClose();\r\n\t};\r\n\tclassStatus = (status) => {\r\n\t\tif (status === 'Alive') {\r\n\t\t\treturn 'text-success';\r\n\t\t} else if (status === 'Dead') {\r\n\t\t\treturn 'text-danger';\r\n\t\t} else {\r\n\t\t\treturn 'text-capitalize d-inline-block'; //text-uppercase\r\n\t\t}\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Modal show={this.state.show} onHide={this.handleClose} size=\"lg\">\r\n\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t<Modal.Title>{this.props.name}</Modal.Title>\r\n\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<div className=\"container-modal\">\r\n\t\t\t\t\t\t\t{this.state.loading ? (\r\n\t\t\t\t\t\t\t\t<BeatLoader\r\n\t\t\t\t\t\t\t\t\tcss={css`\r\n\t\t\t\t\t\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\t\t\t\t\t\tjustify-content: center;\r\n\t\t\t\t\t\t\t\t\t\tmargin: 0 auto;\r\n\t\t\t\t\t\t\t\t\t\tborder-color: blue;\r\n\t\t\t\t\t\t\t\t\t`}\r\n\t\t\t\t\t\t\t\t\tsize={30}\r\n\t\t\t\t\t\t\t\t\tcolor={'#123abc'}\r\n\t\t\t\t\t\t\t\t\tloading={this.state.loading}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<div className=\"p-4\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex justify-content-center\">\r\n\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\tsrc={this.state.character.image}\r\n\t\t\t\t\t\t\t\t\t\t\talt={this.state.character.name}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-circle\" //img-rounded\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"row col-12\">\r\n\t\t\t\t\t\t\t\t\t\t<h3 className=\"text-primary mx-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t{this.state.character.name}\r\n\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"row mt-2\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-6 d-flex\">\r\n\t\t\t\t\t\t\t\t\t\t\t<strong className=\"mr-2\">Species </strong>\r\n\t\t\t\t\t\t\t\t\t\t\t<p>{this.state.character.species}</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-6 d-flex\">\r\n\t\t\t\t\t\t\t\t\t\t\t<strong className=\"mr-2\">Status</strong>\r\n\t\t\t\t\t\t\t\t\t\t\t<p\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={this.classStatus(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.state.character.status\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{this.state.character.status}\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"row mt-2\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-6 d-flex\">\r\n\t\t\t\t\t\t\t\t\t\t\t<strong className=\"mr-2\">{'Creation Date'}</strong>\r\n\t\t\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{moment(this.state.character.created).format(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t'DD/MM/YYYY'\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-6 d-flex\">\r\n\t\t\t\t\t\t\t\t\t\t\t<strong className=\"mr-2\">Gender</strong>\r\n\t\t\t\t\t\t\t\t\t\t\t<p>{this.state.character.gender}</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-12 mt-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<strong className=\"mr-2\">Origin</strong>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-9 mt-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Link to={`/locations/${this.state.character.location.id}`}>{`${this.state.character.origin.type} ${this.state.character.origin.name} ${this.state.character.origin.dimension}`}</Link>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-12 mt-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<strong>Location Current</strong>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-9 mt-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\t\t\tto={`/locations/${this.state.character.location.id}`}\r\n\t\t\t\t\t\t\t\t\t\t\t>{`${this.state.character.location.type} ${this.state.character.location.name} Dimension ${this.state.character.location.dimension}`}</Link>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-12 mb-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<strong>{'Episodes 💫'}</strong>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t\t\t\t\t\t{this.state.character.episode.map((episode) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={episode.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"border-0 badge badge-pill badge-primary mx-2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tto={`/episodes/${episode.id}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{episode.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t<Button variant=\"secondary\" onClick={this.handleClose}>\r\n\t\t\t\t\t\t\tClose\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t</Modal>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\nexport default CharacterDetails;\r\n","import React, { Component } from 'react';\nimport '../assets/styles/Home.css';\nimport CharacterItem from '../components/CharacterItem';\nimport { Pagination } from '@material-ui/lab';\nimport api from '../utils/api';\nimport { css } from '@emotion/core';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport CharacterDetails from '../components/CharacterDetails';\nconst override = css`\n\tdisplay: block;\n\tmargin: 0 auto;\n\tborder-color: blue;\n`;\n//import logo from '../assets/images/start_wars_logo.svg';\n\nclass Home extends Component {\n\tstate = {\n\t\tloading: true,\n\t\terror: false,\n\t\tcharacters: [],\n\t\tcharactersCurrent: [],\n\t\tpages: [1],\n\t\tpage: 1,\n\t\tcount: 1,\n\t\tcharacterId: null,\n\t\tcharacterName: null,\n\t\tisActivePopup: false,\n\t};\n\tfetchData = async (value = 1) => {\n\t\tthis.setState({ loading: true, error: null });\n\t\ttry {\n\t\t\tlet data = await api.getCharacters(value);\n\t\t\tthis.setState({\n\t\t\t\tloading: false,\n\t\t\t\terror: null,\n\t\t\t\tcount: data.characters.info.pages,\n\t\t\t\tcharactersCurrent: data.characters.results,\n\t\t\t\tpage: value,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tthis.setState({ loading: false, error: error, page: 1 });\n\t\t}\n\t};\n\n\thandleChange = (event, value) => {\n\t\tthis.fetchData(value);\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.fetchData();\n\t}\n\n\thandlePopup = (id, name) => {\n\t\tthis.setState({\n\t\t\tisActivePopup: true,\n\t\t\tcharacterId: id,\n\t\t\tcharacterName: name,\n\t\t});\n\t};\n\n\thandlePopupClose = () => {\n\t\tthis.setState({ isActivePopup: false });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{this.state.isActivePopup && (\n\t\t\t\t\t<CharacterDetails\n\t\t\t\t\t\tid={this.state.characterId}\n\t\t\t\t\t\thandleClose={this.handlePopupClose}\n\t\t\t\t\t\tname={this.state.characterName}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t<main className=\"container-full\">\n\t\t\t\t\t<section className=\"title-page-container\">\n\t\t\t\t\t\t<h1 className=\"title-page\">Rick And Morty Characters</h1>\n\t\t\t\t\t\t{/* <div className=\"hero-image\" width=\"378\">\n\t\t\t\t\t\t<img src={logo} alt=\"start wars logo\" />\n\t\t\t\t\t</div> */}\n\t\t\t\t\t</section>\n\t\t\t\t\t<div className=\"sweet-loading mt-4\">\n\t\t\t\t\t\t<ClipLoader\n\t\t\t\t\t\t\tcss={override}\n\t\t\t\t\t\t\tsize={150}\n\t\t\t\t\t\t\tcolor={'#123abc'}\n\t\t\t\t\t\t\tloading={this.state.loading}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t{!this.state.loading && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<section className=\"container-all-characters container-fluid\">\n\t\t\t\t\t\t\t\t<div className=\"container-characters\">\n\t\t\t\t\t\t\t\t\t{this.state.charactersCurrent.map((item) => (\n\t\t\t\t\t\t\t\t\t\t<CharacterItem\n\t\t\t\t\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\t\t\t\t\tcharacter={item}\n\t\t\t\t\t\t\t\t\t\t\thandlerName={this.handlePopup}\n\t\t\t\t\t\t\t\t\t\t></CharacterItem>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t<section className=\"py-4 d-flex justify-content-center\">\n\t\t\t\t\t\t\t\t<Pagination\n\t\t\t\t\t\t\t\t\tcount={this.state.count}\n\t\t\t\t\t\t\t\t\tpage={this.state.page}\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</main>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default Home;\n","import React, { Component } from 'react';\r\nimport api from '../utils/api';\r\nimport { css } from '@emotion/core';\r\nimport MoonLoader from 'react-spinners/MoonLoader';\r\nimport { Link } from 'react-router-dom';\r\nimport '../assets/styles/Home.css';\r\nimport '../assets/styles/Episodes.css';\r\nconst override = css`\r\n\tdisplay: block;\r\n\tmargin: 0 auto;\r\n\tborder-color: blue;\r\n`;\r\n\r\nclass Episode extends Component {\r\n\tstate = {\r\n\t\tloading: true,\r\n\t\terror: false,\r\n\t\tepisode: {},\r\n\t};\r\n\tfetchData = async (id) => {\r\n\t\tthis.setState({ loading: true, error: null });\r\n\t\ttry {\r\n\t\t\tlet data = await api.getEpisode(this.props.match.params.episodeId);\r\n\t\t\tconsole.log(data.episodesByIds[0]);\r\n\t\t\tthis.setState({\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: null,\r\n\t\t\t\tepisode: data.episodesByIds[0],\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tthis.setState({ loading: false, error: error });\r\n\t\t}\r\n\t};\r\n\tcomponentDidMount() {\r\n\t\tthis.fetchData();\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<main className=\"container-full\">\r\n\t\t\t\t<section className=\"title-page-container title-color\">\r\n\t\t\t\t\t<h1 className=\"title-page text-white\">Rick And Morty Episodes</h1>\r\n\t\t\t\t</section>\r\n\t\t\t\t<div className=\"sweet-loading mt-4\">\r\n\t\t\t\t\t<MoonLoader\r\n\t\t\t\t\t\tcss={override}\r\n\t\t\t\t\t\tsize={150}\r\n\t\t\t\t\t\tcolor={'#123abc'}\r\n\t\t\t\t\t\tloading={this.state.loading}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t{!this.state.loading && (\r\n\t\t\t\t\t<div className=\"container container-color\">\r\n\t\t\t\t\t\t<div className=\"row d-flex justify-content-center align-items-center justify-content-lg-between\">\r\n\t\t\t\t\t\t\t<h1 className=\"title-episode\">{`${this.state.episode.name}  -  ${this.state.episode.episode}`}</h1>\r\n                            <h2>\r\n                                {`Air Date ⭐ ${this.state.episode.air_date}`}\r\n                            </h2>\r\n\t\t\t\t\t\t</div>\r\n                        <div className=\"row mt-2\">\r\n\t\t\t\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t\t\t\t<h2>Characters</h2>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"carousel row\">\r\n\t\t\t\t\t\t\t<div className=\"carousel__container\">\r\n\t\t\t\t\t\t\t\t{this.state.episode.characters.map((character, id) => (\r\n\t\t\t\t\t\t\t\t\t<div className=\"carousel-item\" key={id}>\r\n\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"carousel-item__img\"\r\n\t\t\t\t\t\t\t\t\t\t\tsrc={character.image}\r\n\t\t\t\t\t\t\t\t\t\t\talt={character.name}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"carousel-item__details\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"carousel-item__details--title\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{character.name}\r\n\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</main>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Episode;\r\n","import React, { Component } from 'react';\r\nimport api from '../utils/api';\r\nimport { css } from '@emotion/core';\r\nimport MoonLoader from 'react-spinners/MoonLoader';\r\nimport moment from 'moment';\r\nimport '../assets/styles/Home.css';\r\nimport '../assets/styles/Episodes.css';\r\nimport { Link } from 'react-router-dom';\r\nconst override = css`\r\n\tdisplay: block;\r\n\tmargin: 0 auto;\r\n\tborder-color: blue;\r\n`;\r\n\r\nclass Location extends Component {\r\n\tstate = {\r\n\t\tloading: true,\r\n\t\terror: false,\r\n\t\tlocation: {},\r\n\t};\r\n\tfetchData = async (id) => {\r\n\t\tthis.setState({ loading: true, error: null });\r\n\t\ttry {\r\n\t\t\tlet data = await api.getLocation(this.props.match.params.locationId);\r\n\t\t\tconsole.log(data.locationsByIds[0]);\r\n\t\t\tthis.setState({\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: null,\r\n\t\t\t\tlocation: data.locationsByIds[0],\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tthis.setState({ loading: false, error: error });\r\n\t\t}\r\n\t};\r\n\tcomponentDidMount() {\r\n\t\tthis.fetchData();\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<main className=\"container-full\">\r\n\t\t\t\t<section className=\"title-page-container title-color\">\r\n\t\t\t\t\t<h1 className=\"title-page text-white\">Rick And Morty Locations</h1>\r\n\t\t\t\t</section>\r\n\t\t\t\t<div className=\"sweet-loading mt-4\">\r\n\t\t\t\t\t<MoonLoader\r\n\t\t\t\t\t\tcss={override}\r\n\t\t\t\t\t\tsize={150}\r\n\t\t\t\t\t\tcolor={'#123abc'}\r\n\t\t\t\t\t\tloading={this.state.loading}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t{!this.state.loading && (\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<div className=\"row d-flex justify-content-center align-items-center justify-content-lg-between\">\r\n\t\t\t\t\t\t\t<h1 className=\"title-location\">{`${this.state.location.name}  -  ${this.state.location.dimension}`}</h1>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t{`Created ${moment(this.state.location.created).format(\r\n\t\t\t\t\t\t\t\t\t'MMM DD, YYYY'\r\n\t\t\t\t\t\t\t\t)}`}\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"row mt-2\">\r\n\t\t\t\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t\t\t\t<h2>Residents</h2>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"carousel row\">\r\n\t\t\t\t\t\t\t<div className=\"carousel__container\">\r\n\t\t\t\t\t\t\t\t{this.state.location.residents.map((character, id) => (\r\n\t\t\t\t\t\t\t\t\t<div className=\"carousel-item\" key={id}>\r\n\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"carousel-item__img\"\r\n\t\t\t\t\t\t\t\t\t\t\tsrc={character.image}\r\n\t\t\t\t\t\t\t\t\t\t\talt={character.name}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"carousel-item__details\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"carousel-item__details--title\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{character.name}\r\n\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</main>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Location;\r\n","import React from 'react';\n\nconst Footer = (props) => (\n\t<footer className=\"text-center footer-container p-4\">\n\t\t<span>© Copyright 2020. DEVELOPED by Nicolas Pastran Zamora</span>\n\t</footer>\n);\nexport default Footer;\n","import React from 'react';\r\nimport Footer from './Footer';\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <>\r\n            {props.children}\r\n            <Footer />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Layout;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport NotFound from '../pages/NotFound';\nimport Home from '../pages/Home';\nimport Episode from '../pages/Episode';\nimport Location from '../pages/Location';\nimport { connect } from 'react-redux';\nimport Main from '../layouts/Main';\n\nconst App = (props) => {\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<Main>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t\t\t<Route exact path=\"/episodes/:episodeId\" component={Episode} />\n\t\t\t\t\t<Route exact path=\"/locations/:locationId\" component={Location} />\n\t\t\t\t\t<Route component={NotFound} />\n\t\t\t\t</Switch>\n\t\t\t</Main>\n\t\t</BrowserRouter>\n\t);\n};\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tuser: state.user,\n\t};\n};\n\nexport default connect(mapStateToProps, null)(App);\n","const reducer = (state, action) => {\n    switch (action.type) {\n        case 'ADD_CHARACTER':\n            let charactersA = state.charactersCar;\n            const i = charactersA.map((e) => { return e.id; }).indexOf(action.payload.id);\n            if (i === -1) {\n                const data = {\n                    count: 1,\n                    id: action.payload.id,\n                    price: action.payload.price,\n                    name: action.payload.name\n                }\n                return {\n                    ...state,\n                    charactersCar: [...state.charactersCar, data],\n                    total: state.total + action.payload.price\n                };\n            } else {\n                charactersA[i].count = charactersA[i].count + 1;\n                return {\n                    ...state,\n                    charactersCar: charactersA,\n                    total: state.total + action.payload.price\n                };\n            }\n        case 'REMOVE_CHARACTER':\n            let charactersR = state.charactersCar;\n            const j = charactersR.map((e) => { return e.id; }).indexOf(action.payload.id);\n            if (charactersR[j].count === 1) {\n                return {\n                    ...state,\n                    charactersCar: charactersR.filter((items) => items.id !== action.payload.id),\n                    total: state.total - action.payload.price\n                };\n            } else {\n                charactersR[j].count = charactersR[j].count - 1;\n                return {\n                    ...state,\n                    charactersCar: charactersR,\n                    total: state.total - action.payload.price\n                };\n            }\n        case 'CLEAR_CHARACTER':\n            return {\n                ...state,\n                charactersCar: [],\n                total: 0\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","const initialState = {\n    characters: [],\n    user: {}\n}\nexport default initialState;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './assets/styles/Global.css';\n\nimport App from './routes/App';\n\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './store/reducers';\n\nimport initialState from './fields/initialState';\n\nconst store = createStore(reducer, initialState);\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('app')\n);\n"],"sourceRoot":""}